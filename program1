module date
contains
    subroutine newton(a,b,eps,m)        
        implicit none
        real, intent(in)        :: eps, a, b
        integer, intent(inout)  :: m
        real                    :: xn,xn1,Prxn,Fxn,fxn1,dx,fl,fr,xl,xr,xn0,prl,prr,x
        integer                 :: i,j,n1,k,k2,n

        n= 50
        n1 = n+1
        dx=(b-a)/n
        xl = a
        prl = pr(xl)
        fl=fx(xl)
        xr=xl
        k = 0
        do j=1,n1 ! ищем интервал смены знака функции
            xr = xr + dx
            fr = fx (xr)
            if (fl*fr < 0.0) then
                xn= xr ! начальное приближение
                do i =1,m   ! ищем корень уравнения на интервале xl,xr
                    Fxn = fx(xn)
                    Prxn = pr(xn)
                    xn1 = xn-Fxn/Prxn
                    fxn1 = fx(xn1)
                    if (abs(Fxn1-Fxn)<eps.and.abs(xn1-xn)<eps) exit
                    xn = xn1
                end do
                if(i==m+1) then
                    write(*,*) 'Sdelano', m, 'shagov, poluchen koren=',xn1,', znacheniye f=',fxn1  
                else
                    write(*,*) 'Koren uravneniya =',xn1, ', znacheniye f=' ,fxn1               
                end if
                xl = xr
                xr = xl
                fl = fr
            end if     
        end do
    end subroutine
  
  real function Fx(x)
        implicit none
        real, intent(in) :: x
        Fx = (x-1)**2-exp(-x)
    end function
    real function Pr(x)
        implicit none
        real, intent(in) :: x    
        Pr = 2*x-2+exp(-x)
    end function
end module

program uravnenie
    use date
    implicit none
    real            :: eps,a,b
    integer         :: m

    write(*,*) 'zadannoe uravnenie (x-1)**2-e**(-x)=0'
    write(*,*) 'zadayte interval poiska korney'
    read(*,*) a,b
    eps=1e-8
    m=1000
    call newton(a,b,eps,m)
end program

